# * TYPES

type Professor {
  id: ID!
  name: String!
  departments: [String!]
  offerings: [Offering!]
}

# * QUERIES

input ProfessorFilterInput {
  department: String!
}

extend type Query {
  getProfessor(id: ID!): Professor
  getProfessors(ids: [ID!]!): [Professor]!
  listProfessors(filter: ProfessorFilterInput): [Professor]!
}

# * MUTATIONS

input AddProfessorInput {
  name: String!
  departmentCodes: [String!]
}

input UpdateProfessorInput {
  name: String
  departmentCodes: [String!]
}

extend type Mutation {
  addProfessor(professor: AddProfessorInput!): MutationResponseWithId!
    @aws_api_key
    @aws_cognito_user_pools(cognito_groups: ["admin"])
  updateProfessor(id: ID!, professor: UpdateProfessorInput!): MutationResponse!
    @aws_api_key
    @aws_cognito_user_pools(cognito_groups: ["admin"])
  deleteProfessor(id: ID!): MutationResponse!
    @aws_api_key
    @aws_cognito_user_pools(cognito_groups: ["admin"])
}
