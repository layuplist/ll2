# * TYPES

type Review @aws_iam @aws_api_key {
  id: ID!
  """
  Offering department.
  """
  department: String!
  """
  Course number.
  """
  number: Float!
  """
  Term code.
  """
  term: Int!
  """
  Section.
  """
  section: Int!
  """
  Author email.
  """
  userEmail: String!
  """
  Quality score given, -1 or 1.
  """
  qualityScore: Int
  """
  Layup score given, -1 or 1.
  """
  layupScore: Int
  """
  Comment text.
  """
  comment: String
}

# * QUERIES

input ReviewFilterInput {
  department: String
  number: Float
  term: Int
  section: Int
  userEmail: String
}

extend type Query {
  getReview(id: ID!): Review
    @aws_iam
  getReviews(ids: [ID!]!): [Review]!
  listReviews(filter: ReviewFilterInput): [Review]!
    @aws_iam
}

# * MUTATIONS

input AddReviewInput {
  department: String!
  number: Float!
  term: Int!
  section: Int!
  userEmail: String!
  qualityScore: Int
  layupScore: Int
  comment: String
}

input UpdateReviewInput {
  qualityScore: Int
  layupScore: Int
  comment: String
}

# review mutations are accessible to students
extend type Mutation {
  addReview(review: AddReviewInput!): MutationResponseWithId!
    @aws_cognito_user_pools(cognito_groups: ["student"])
  updateReview(id: ID!, review: UpdateReviewInput!): MutationResponse!
    @aws_cognito_user_pools(cognito_groups: ["student"])
  deleteReview(id: ID!): MutationResponse!
    @aws_cognito_user_pools(cognito_groups: ["student"])
}
